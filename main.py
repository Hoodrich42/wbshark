import telebot
from telebot import types
import time
from dotenv import load_dotenv
from db_requests import *
from wb_requests import *

load_dotenv()

bot_token = os.getenv('TOKEN')
bot = telebot.TeleBot(bot_token)

db_query = DbRequest()
api_query = ApiRequest()

def check_request(response):
    fl_api = False
    msg = ''
    try:
        if response['code'] == 400:
            fl_api = False
            msg = "can't parse dateFrom"
        if response['code'] == 429:
            fl_api = False
            msg = "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤"
        if response['code'] == 401:
            fl_api = False
            msg = '–Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω'
            return msg, fl_api
    except:
        fl_api = True
    return msg, fl_api


@bot.message_handler(commands=['start'])
def startt(message):
    telegram_id = str(message.from_user.id)
    reg = False
    all_users = db_query.select_all()
    for user in all_users:
        if telegram_id == user[0]:
            reg = True

    if not reg:
        db_query.insert_db(telegram_id)

    start_markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('üëâ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ', callback_data='podkluchenie')
    start_markup.add(btn1)
    msg = f'ü¶à WB Shark Bot - —Å–æ–∑–¥–∞–Ω –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥–∞–∂ –Ω–∞ WB. –í–æ—Ç –µ–≥–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n' \
          f'- üõí –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö\n' \
          f'- ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –≤—ã–∫—É–ø–∞—Ö\n' \
          f'- üì¶ –û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö\n' \
          f'- üíº –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏\n' \
          f'- üöõ –°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –∏ —Ä–µ–≥–∏–æ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—è\n' \
          f'- üìë –°–≤–æ–¥–∫–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º\n\n' \
          f'–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:\n' \
          f'- üü© –ê–í–° –∞–Ω–∞–ª–∏–∑\n' \
          f'- üåä –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã Storm: –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –≤–æ –≤—Ä–µ–º—è —Å–±–æ–µ–≤ WB –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö –∏ –≤—ã–∫—É–ø–∞—Ö\n' \
          f'- üë• –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤ WB\n' \
          f'- üóÉÔ∏è –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø–µ—Ä–∏–æ–¥–∞ (7, 14, 30, 60 –¥–Ω–µ–π)\n' \
          f'- ‚ùóÔ∏è–ü–æ–ª–Ω–æ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–µ–∫–ª–∞–º—ã'
    bot.send_message(message.chat.id, text=f'{msg}', reply_markup=start_markup)

@bot.message_handler(content_types=['text'])
def add_api_key(message):
    all_users = db_query.select_all()

    reg = False
    for user in all_users:
        if str(message.from_user.id) == user[0]:
            reg = True

    if reg:
        api_key = message.text
        orders_today = api_query.get_orders(api_key, 'today')
        msg, fl_orders_today = check_request(orders_today)
        if fl_orders_today:
            ip_name = api_query.api_ip(225816980, api_key)
            bot.send_message(message.chat.id, ip_name)


bot.polling(non_stop=True, interval=0)
